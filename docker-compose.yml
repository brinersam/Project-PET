version: '3.4'

networks:
  ProjectPetNetwork:
    external: true

services:
  projectpet.web:
    container_name: ProjectPet.web
    build:
      args:
        NUGET_USERNAME: ${NUGET_USERNAME}
        NUGET_PASSWORD: ${NUGET_PASSWORD}
      context: .
      dockerfile: src/ProjectPet.Web/Dockerfile
    ports:
        - "8080:8080"
        - "8081:8081"
    volumes:
        - $APPDATA/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
        - $APPDATA/ASP.NET/Https:/home/app/.aspnet/https:ro
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_HTTP_PORTS=8080
        - ASPNETCORE_HTTPS_PORTS=8081
    depends_on:
        - projectpet.database
        - projectpet.seq
    restart: always
    networks:
      - ProjectPetNetwork
      - default

  projectpet.database:
    image: postgres
    container_name: ProjectPet.database
    environment:
        - POSTGRES_DB=project_pet
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
    ports:
        - "5432:5432"
    volumes:
        - ./postgres-data:/var/lib/postgresql/data
    restart: always

  projectpet.seq:
    image: datalust/seq:latest
    container_name: ProjectPet.seq
    restart: always
    environment:
        - ACCEPT_EULA=Y
    ports:
        - "5341:5341"
        - "8078:80"

  projectpet.nginx:
    image: nginx
    container_name: ProjectPet.nginx
    volumes:
        - ./nginx-config/default.conf:/etc/nginx/conf.d/default.conf
    ports:
        - "80:85"
    depends_on:
        - projectpet.web
    restart: always

    # file service start
  projectpet.fileservice:
    container_name: ProjectPet.fileservice
    build:
      args:
        NUGET_USERNAME: ${NUGET_USERNAME}
        NUGET_PASSWORD: ${NUGET_PASSWORD}
      context: ../ProjectPet.FileService/ProjectPet.FileService
      dockerfile: ProjectPet.FileService/Dockerfile
    ports:
        - "6060:6060"
        - "6061:6061"
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_HTTP_PORTS=6060
        - ASPNETCORE_HTTPS_PORTS=6061
    volumes:
        - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
        - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
        - "projectpet.minio"
        - "projectpet.fileservice.mongodb"
    networks:
      - ProjectPetNetwork
      - default
    restart: always

  projectpet.minio:
    image: minio/minio
    container_name: ProjectPet.fileservice.minio
    command: server --address ":5000" --console-address ":5001" /var/lib/minio/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
        - "5000:5000"
        - "5001:5001"
    volumes:
        - ./minio-data:/var/lib/minio/data
    restart: always

  projectpet.fileservice.mongodb:
    image: mongo:latest
    container_name: ProjectPet.fileservice.mongodb
    command: mongod -port 5050
    ports:
      - "5050:5050"
    volumes:
        - ./mongoDb-data:/data/db
    restart: always
    # file service end

  projectpet.rabbitmq:
    image: rabbitmq:management-alpine
    container_name: ProjectPet.rabbitmq
    volumes:
        - ./rabbitMQData:/var/lib/rabbitmq
        - ./rabbitMQ.conf:/etc/rabbitmq/rabbitmq.conf
    ports:
        - "5800:5800"
        - "5818:5818"
    depends_on:
        - projectpet.web
    restart: always
