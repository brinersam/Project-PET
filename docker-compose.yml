version: '3.4'

services:
  projectpet.web:
    container_name: ProjectPet.web
    build:
      context: .
      dockerfile: src/ProjectPet.Web/Dockerfile
    ports:
        - "8080:8080"
        - "8081:8081"
    volumes:
        - $APPDATA/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
        - $APPDATA/ASP.NET/Https:/home/app/.aspnet/https:ro
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_HTTP_PORTS=8080
        - ASPNETCORE_HTTPS_PORTS=8081
    depends_on:
        - projectpet.database
        - projectpet.seq
        - projectpet.minio
    restart: always

  projectpet.database:
    image: postgres
    container_name: ProjectPet.database
    environment:
        - POSTGRES_DB=project_pet
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
    ports:
        - "5432:5432"
    volumes:
        - ./postgres-data:/var/lib/postgresql/data
    restart: always

  projectpet.seq:
    image: datalust/seq:latest
    container_name: ProjectPet.seq
    restart: always
    environment:
        - ACCEPT_EULA=Y
    ports:
        - "5341:5341"
        - "8078:80"

  projectpet.minio:
    image: minio/minio
    container_name: ProjectPet.minio
    command: server --console-address ":9001" /var/lib/minio/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
        - "9000:9000"
        - "9001:9001"
    volumes:
        - ./minio-data:/var/lib/minio/data
    restart: always

  projectpet.nginx:
    image: nginx
    container_name: ProjectPet.nginx
    volumes:
        - ./nginx-config/default.conf:/etc/nginx/conf.d/default.conf
    ports:
        - "80:85"
    depends_on:
        - projectpet.web
    restart: always

